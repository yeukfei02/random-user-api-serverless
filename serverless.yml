org: yeukfei02
app: random-user-api-serverless
service: random-user-api-serverless

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: v1
  region: ap-southeast-1
  environment:
    NODE_ENV: production

functions:
  main:
    handler: src/main/handler.getMain
    events:
      - http:
          path: /api
          method: get
          cors: true
  
  signup:
    handler: src/signup/handler.signup
    events:
      - http:
          path: /api/user/signup
          method: post
          cors: true
  
  login:
    handler: src/login/handler.login
    events:
      - http:
          path: /api/user/login
          method: post
          cors: true

  isUserLoggedIn:
    handler: src/isUserLoggedIn/handler.isUserLoggedIn

  createRandomUser:
    handler: src/createRandomUser/handler.createRandomUser
    events:
      - http:
          path: /api/random-user
          method: post
          cors: true
          # authorizer:
          #   name: isUserLoggedIn
          #   identitySource: method.request.header.Authorization

  getRandomUser:
    handler: src/getRandomUser/handler.getRandomUser
    events:
      - http:
          path: /api/random-user
          method: get
          cors: true
          # authorizer:
          #   name: isUserLoggedIn
          #   identitySource: method.request.header.Authorization

  getRandomUserById:
    handler: src/getRandomUserById/handler.getRandomUserById
    events:
      - http:
          path: /api/random-user/{id}
          method: get
          cors: true
          # authorizer:
          #   name: isUserLoggedIn
          #   identitySource: method.request.header.Authorization

  updateRandomUserById:
    handler: src/updateRandomUserById/handler.updateRandomUserById
    events:
      - http:
          path: /api/random-user/{id}
          method: put
          cors: true
          # authorizer:
          #   name: isUserLoggedIn
          #   identitySource: method.request.header.Authorization

  deleteRandomUserById:
    handler: src/deleteRandomUserById/handler.deleteRandomUserById
    events:
      - http:
          path: /api/random-user/{id}
          method: delete
          cors: true
          # authorizer:
          #   name: isUserLoggedIn
          #   identitySource: method.request.header.Authorization

plugins:
  - serverless-plugin-typescript
  - serverless-offline
