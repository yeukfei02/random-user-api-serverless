org: yeukfei05
app: random-user-api-serverless
service: random-user-api-serverless

frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: prod
  region: ap-southeast-1
  apiName: random-user-api-serverless-prod
  tracing:
    apiGateway: true
    lambda: true
  environment:
    NODE_ENV: production
    MY_AWS_ACCESS_KEY: ${param:MY_AWS_ACCESS_KEY}
    MY_AWS_SECRET_ACCESS_KEY: ${param:MY_AWS_SECRET_ACCESS_KEY}
    JWT_SECRET: ${param:JWT_SECRET}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'xray:PutTraceSegments'
            - 'xray:PutTelemetryRecords'
          Resource:
            - '*'
  apiGateway:
    shouldStartNameWithService: true
    description: random user api serverless prod
  lambdaHashingVersion: 20201221
  architecture: arm64
  timeout: 30

functions:
  main:
    handler: src/main/handler.getMain
    events:
      - http:
          path: /api
          method: get
          cors: true

  signup:
    handler: src/signup/handler.signup
    events:
      - http:
          path: /api/user/signup
          method: post
          cors: true

  login:
    handler: src/login/handler.login
    events:
      - http:
          path: /api/user/login
          method: post
          cors: true

  authorize:
    handler: src/authorize/handler.authorize

  createRandomUser:
    handler: src/createRandomUser/handler.createRandomUser
    events:
      - http:
          path: /api/random-user
          method: post
          cors: true
          authorizer:
            name: authorize

  getRandomUser:
    handler: src/getRandomUser/handler.getRandomUser
    events:
      - http:
          path: /api/random-user
          method: get
          cors: true
          authorizer:
            name: authorize

  getRandomUserById:
    handler: src/getRandomUserById/handler.getRandomUserById
    events:
      - http:
          path: /api/random-user/{id}
          method: get
          cors: true
          authorizer:
            name: authorize

  updateRandomUserById:
    handler: src/updateRandomUserById/handler.updateRandomUserById
    events:
      - http:
          path: /api/random-user/{id}
          method: put
          cors: true
          authorizer:
            name: authorize

  deleteRandomUserById:
    handler: src/deleteRandomUserById/handler.deleteRandomUserById
    events:
      - http:
          path: /api/random-user/{id}
          method: delete
          cors: true
          authorizer:
            name: authorize

plugins:
  - serverless-layers
  - serverless-plugin-typescript
  - serverless-offline

custom:
  serverless-layers:
    - common:
        packageManager: yarn
        dependenciesPath: ./package.json
        layersDeploymentBucket: random-user-api-serverless-serverless-layers
